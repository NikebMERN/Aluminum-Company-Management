import db from "../config/db.js";

// Get items assigned to sub-admin
export const getAssignedItems = async (req, res) => {
    try {
        const subAdminId = req.user.id;
        const [items] = await db.query(
            "SELECT * FROM aluminum_items WHERE sub_admin_id = ?",
            [subAdminId]
        );
        res.json(items);
    } catch (error) {
        res.status(500).json({ message: "Server error", error: error.message });
    }
};

// Update sold quantity for an item
export const updateSoldQuantity = async (req, res) => {
    try {
        const subAdminId = req.user.id;
        const { itemId, quantitySold } = req.body;

        const [itemRows] = await db.query(
            "SELECT given_quantity, sold_quantity FROM aluminum_items WHERE id = ? AND sub_admin_id = ?",
            [itemId, subAdminId]
        );

        if (itemRows.length === 0) {
            return res.status(404).json({ message: "Item not found" });
        }

        const item = itemRows[0];
        const newSoldQuantity = item.sold_quantity + quantitySold;

        if (newSoldQuantity > item.given_quantity) {
            return res
                .status(400)
                .json({ message: "Sold quantity cannot exceed given quantity" });
        }

        await db.query(
            "UPDATE aluminum_items SET sold_quantity = ? WHERE id = ? AND sub_admin_id = ?",
            [newSoldQuantity, itemId, subAdminId]
        );

        // Optionally: notify super admin if sold out (newSoldQuantity === given_quantity)
        if (newSoldQuantity === item.given_quantity) {
            // Notification logic here (send email or set flag)
        }

        res.json({ message: "Sold quantity updated successfully" });
    } catch (error) {
        res.status(500).json({ message: "Server error", error: error.message });
    }
};

// Get revenue generated by sub-admin
export const getRevenue = async (req, res) => {
    try {
        const subAdminId = req.user.id;
        const [rows] = await db.query(
            `SELECT shape, given_quantity, sold_quantity, price_per_item, 
              sold_quantity * price_per_item AS total_revenue 
       FROM aluminum_items WHERE sub_admin_id = ?`,
            [subAdminId]
        );
        res.json(rows);
    } catch (error) {
        res.status(500).json({ message: "Server error", error: error.message });
    }
};
